basePath: /kitchencontrol/api/v1
definitions:
  dto.CustomerDTO:
    properties:
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is fiap ddd challenge project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiap Challenge DDD API
  version: "1.0"
paths:
  /customers:
    get:
      consumes:
      - application/json
      description: Get details of all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CustomerDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create Customer in DB
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CustomerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerDTO'
      summary: Create Customer
      tags:
      - Customers
  /customers/{cpf}:
    get:
      consumes:
      - application/json
      description: Get details of a customer by cpf
      parameters:
      - description: Customer cpf
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerDTO'
        "404":
          description: Customer not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a customer
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Update details of a customer by cpf
      parameters:
      - description: Customer cpf
        in: path
        name: id
        required: true
        type: string
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/dto.CustomerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerDTO'
        "400":
          description: Invalid data
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Customer not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a customer
      tags:
      - Customers
swagger: "2.0"
